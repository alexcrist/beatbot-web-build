{"version":3,"sources":["src/features/Settings/SettingsSignedIn.js","src/features/Settings/SettingsSignedOut.js","src/features/Settings/Settings.js"],"names":["Container","styled","View","SMALL_MARGIN","STANDARD_MARGIN","NAV_BAR_HEIGHT","TextContainer","Title","Text","TITLE_FONT","COLORS","DARK","LARGE_FONT_SIZE","FONT","ButtonContainer","FeedbackButton","PrimaryButton","SettingsSignedIn","dispatch","useDispatch","email","useSelector","state","user","accountEmail","text","onPress","showFeedbackModal","logOut","WaveContainer","CloudIcon","FontAwesome5","TITLE_FONT_SIZE","FONT_BOLD","STANDARD_FONT_SIZE","SignUpButton","HIGHLIGHTS","SettingsSignedOut","WaveVisual","isAnimating","animationDuration","lineColors","SETTINGS_SIGNED_OUT_WAVE_VISUAL_COLORS","name","color","BACKGROUND","size","solid","navigate","Settings","content","isSignedIn"],"mappings":"uMAOMA,EAAYC,IAAOC,KAAV,yLAKFC,IAAkBC,KAAqBA,KACjCC,IAAiBD,MAI9BE,EAAgBL,IAAOC,KAAV,iFAMbK,EAAQN,IAAOO,KAAV,iKACMC,KACNC,IAAOC,KACHC,IACEA,IACET,KAKbK,EAAOP,IAAOO,KAAV,iKACOK,IACNH,IAAOC,KACHC,IACEA,IACER,MAKbU,EAAkBb,IAAOC,KAAV,4DAKfa,EAAiBd,YAAOe,IAAPf,CAAH,4CACDE,KAyCJc,EAtCU,WAEvB,IAAMC,EAAWC,cAUXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,gBAE9C,OACE,eAACxB,EAAD,WACE,eAACM,EAAD,WACE,cAACC,EAAD,sBACA,cAACC,EAAD,UAAOY,IACP,cAACb,EAAD,4BACA,cAACC,EAAD,sBACA,cAACD,EAAD,uBACA,cAACC,EAAD,2CAEF,eAACM,EAAD,WACE,cAACC,EAAD,CACEU,KAAK,gBACLC,QAnBgB,WACtBR,EAASS,kBAoBL,cAAC,IAAD,CACEF,KAAK,UACLC,QA3Bc,WACpBR,EAASU,yB,0BClDP5B,EAAYC,IAAOC,KAAV,0GAEIG,IAAiB,EAAID,MAKlCyB,EAAgB5B,IAAOC,KAAV,mEAKb4B,EAAY7B,YAAO8B,IAAP9B,CAAH,yDAKTK,EAAgBL,IAAOC,KAAV,yEAEKE,MAGlBG,EAAQN,IAAOO,KAAV,4HAEMC,KACFuB,KACJtB,IAAOC,KACCR,KAGbK,EAAOP,IAAOO,KAAV,0HAEOyB,IACFC,KACuB,IAArBA,KACNxB,IAAOC,MAGZG,EAAkBb,IAAOC,KAAV,yFACGE,MAKlB+B,EAAelC,YAAOe,IAAPf,CAAH,sEACIS,IAAO0B,WAAW,GACrBjC,KAyCJkC,EAtCW,WAUxB,OACE,eAAC,EAAD,WACE,eAACR,EAAD,WACE,cAACS,EAAA,EAAD,CAAYC,aAAW,EAACC,kBAAmB,KAAOC,WAAYC,MAC9D,cAACZ,EAAD,CAAWa,KAAK,QAAQC,MAAOlC,IAAOmC,WAAYC,KAAM,GAAIC,OAAK,OAEnE,eAAC,EAAD,WACE,cAAC,EAAD,4BAGA,cAAC,EAAD,sFAIF,eAAC,EAAD,WACE,cAACZ,EAAD,CACEV,KAAK,UACLC,QAzBc,WACpBsB,YAAS,cA0BL,cAAC,IAAD,CACEvB,KAAK,SACLC,QAzBa,WACnBsB,YAAS,oBCzDPhD,EAAYC,IAAOC,KAAV,yDACOQ,IAAOmC,YAcdI,UAVE,WACf,IACMC,EADa7B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAK4B,cACtB,cAAC,EAAD,IAAuB,cAAC,EAAD,IACpD,OACE,cAAC,EAAD,UACGD","file":"static/js/6.87947085.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components/native';\nimport { PrimaryButton, SecondaryButton } from '../../components/Button';\nimport { COLORS, FONT, LARGE_FONT_SIZE, NAV_BAR_HEIGHT, SMALL_MARGIN, STANDARD_MARGIN, TITLE_FONT } from '../../constants';\nimport { showFeedbackModal } from '../../redux/modalsSlice';\nimport { logOut } from '../../redux/userSlice';\n\nconst Container = styled.View`\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: ${SMALL_MARGIN}px ${STANDARD_MARGIN}px ${STANDARD_MARGIN}px;\n  margin-bottom: ${NAV_BAR_HEIGHT + STANDARD_MARGIN}px;\n  position: relative;\n`;\n\nconst TextContainer = styled.View`\n  align-items: center;\n  width: 100%;\n  max-width: 900px;\n`;\n\nconst Title = styled.Text`\n  font-family: ${TITLE_FONT};\n  color: ${COLORS.DARK};\n  font-size: ${LARGE_FONT_SIZE}px;\n  line-height: ${LARGE_FONT_SIZE}px;\n  margin-bottom: ${SMALL_MARGIN}px;\n  text-align: left;\n  width: 100%;\n`;\n\nconst Text = styled.Text`\n  font-family: ${FONT};\n  color: ${COLORS.DARK};\n  font-size: ${LARGE_FONT_SIZE}px;\n  line-height: ${LARGE_FONT_SIZE}px;\n  margin-bottom: ${STANDARD_MARGIN}px;\n  text-align: left;\n  width: 100%;\n`;\n\nconst ButtonContainer = styled.View`\n  width: 100%;\n  align-items: center;\n`;\n\nconst FeedbackButton = styled(PrimaryButton)`\n  margin-bottom: ${SMALL_MARGIN}px;\n`;\n\nconst SettingsSignedIn = () => {\n  \n  const dispatch = useDispatch();\n\n  const onPressLogOut = () => {\n    dispatch(logOut());\n  };\n\n  const onPressFeedback = () => {\n    dispatch(showFeedbackModal());\n  };\n\n  const email = useSelector(state => state.user.accountEmail);\n\n  return (\n    <Container>\n      <TextContainer>\n        <Title>Account</Title>\n        <Text>{email}</Text>\n        <Title>Cloud backups</Title>\n        <Text>enabled</Text>\n        <Title>Pro mode</Title>\n        <Text>activated (early adopter)</Text>\n      </TextContainer>\n      <ButtonContainer>\n        <FeedbackButton \n          text='Send feedback'\n          onPress={onPressFeedback}\n        />\n        <SecondaryButton\n          text='Log out'\n          onPress={onPressLogOut}\n        />\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nexport default SettingsSignedIn;","import { FontAwesome5 } from '@expo/vector-icons';\nimport styled from 'styled-components/native';\nimport { PrimaryButton, SecondaryButton } from '../../components/Button';\nimport WaveVisual from '../../components/WaveVisual';\nimport { COLORS, FONT_BOLD, NAV_BAR_HEIGHT, SETTINGS_SIGNED_OUT_WAVE_VISUAL_COLORS, SMALL_MARGIN, STANDARD_MARGIN, STANDARD_FONT_SIZE, TITLE_FONT, TITLE_FONT_SIZE } from '../../constants';\nimport { navigate } from '../../util/navigate';\n\nconst Container = styled.View`\n  flex: 1;\n  margin-bottom: ${NAV_BAR_HEIGHT + 2 * STANDARD_MARGIN}px;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nconst WaveContainer = styled.View`\n  position: relative;\n  align-items: center;\n`;\n\nconst CloudIcon = styled(FontAwesome5)`\n  position: absolute;\n  top: 47px;\n`;\n\nconst TextContainer = styled.View`\n  align-items: center;\n  padding-horizontal: ${STANDARD_MARGIN}px;\n`;\n\nconst Title = styled.Text`\n  text-align: center;\n  font-family: ${TITLE_FONT};\n  font-size: ${TITLE_FONT_SIZE}px;\n  color: ${COLORS.DARK};\n  margin-bottom: ${SMALL_MARGIN}px;\n`;\n\nconst Text = styled.Text`\n  text-align: center;\n  font-family: ${FONT_BOLD};\n  font-size: ${STANDARD_FONT_SIZE}px;\n  line-height: ${STANDARD_FONT_SIZE * 1.5}px;\n  color: ${COLORS.DARK};\n`;\n\nconst ButtonContainer = styled.View`\n  padding-horizontal: ${STANDARD_MARGIN}px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst SignUpButton = styled(PrimaryButton)`\n  background-color: ${COLORS.HIGHLIGHTS[3]};\n  margin-bottom: ${SMALL_MARGIN}px;\n`;\n\nconst SettingsSignedOut = () => {\n\n  const onPressSignUp = () => {\n    navigate('Sign up');\n  };\n\n  const onPressLogIn = () => {\n    navigate('Log in');\n  };\n\n  return (\n    <Container>\n      <WaveContainer>\n        <WaveVisual isAnimating animationDuration={15000} lineColors={SETTINGS_SIGNED_OUT_WAVE_VISUAL_COLORS} />\n        <CloudIcon name='cloud' color={COLORS.BACKGROUND} size={80} solid />\n      </WaveContainer>\n      <TextContainer>\n        <Title>\n          Cloud Backups\n        </Title>\n        <Text>\n          Backup your recordings to the cloud and access them from any device.\n        </Text>\n      </TextContainer>\n      <ButtonContainer>\n        <SignUpButton \n          text='Sign up'\n          onPress={onPressSignUp}\n        />\n        <SecondaryButton \n          text='Log in'\n          onPress={onPressLogIn}\n        />\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nexport default SettingsSignedOut;","import { useSelector } from 'react-redux';\nimport styled from 'styled-components/native';\nimport { COLORS } from '../../constants';\nimport SettingsSignedIn from './SettingsSignedIn';\nimport SettingsSignedOut from './SettingsSignedOut';\n\nconst Container = styled.View`\n  background-color: ${COLORS.BACKGROUND};\n  flex: 1;\n`;\n\nconst Settings = () => {\n  const isSignedIn = useSelector(state => state.user.isSignedIn);\n  const content = isSignedIn ? <SettingsSignedIn /> : <SettingsSignedOut />;\n  return (\n    <Container>\n      {content}\n    </Container>\n  );\n};\n\nexport default Settings;"],"sourceRoot":""}