{"version":3,"sources":["node_modules/midi-writer-js/build/index.js","../../emsdk/node/14.15.5_64bit/lib/node_modules/expo-cli/node_modules/buffer/index.js","../../emsdk/node/14.15.5_64bit/lib/node_modules/expo-cli/node_modules/base64-js/index.js","../../emsdk/node/14.15.5_64bit/lib/node_modules/expo-cli/node_modules/ieee754/index.js","../../emsdk/node/14.15.5_64bit/lib/node_modules/expo-cli/node_modules/isarray/index.js","node_modules/note-parser/index.js","node_modules/tonal-midi/index.js"],"names":["tonalMidi","Constants","VERSION","HEADER_CHUNK_TYPE","HEADER_CHUNK_LENGTH","HEADER_CHUNK_FORMAT0","HEADER_CHUNK_FORMAT1","HEADER_CHUNK_DIVISION","TRACK_CHUNK_TYPE","META_EVENT_ID","META_TEXT_ID","META_COPYRIGHT_ID","META_TRACK_NAME_ID","META_INSTRUMENT_NAME_ID","META_LYRIC_ID","META_MARKER_ID","META_CUE_POINT","META_TEMPO_ID","META_SMTPE_OFFSET","META_TIME_SIGNATURE_ID","META_KEY_SIGNATURE_ID","META_END_OF_TRACK_ID","CONTROLLER_CHANGE_STATUS","PROGRAM_CHANGE_STATUS","PITCH_BEND_STATUS","_typeof","obj","Symbol","iterator","constructor","prototype","_wrapRegExp","re","groups","BabelRegExp","_super","RegExp","_groups","WeakMap","flags","_this","set","get","_setPrototypeOf","buildGroups","result","g","Object","keys","reduce","name","create","_inherits","exec","str","call","this","replace","substitution","_","args","arguments","length","slice","push","apply","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","subClass","superClass","value","o","p","setPrototypeOf","__proto__","Utils","string","split","map","_char","charCodeAt","n","isNaN","parseFloat","isFinite","pitch","middleC","undefined","toMidi","ticks","buffer","Math","round","bList","s","encodeURI","bytes","stringResult","hex","forEach","_byte","toString","parseInt","number","bytesNeeded","hexString","hexArray","match","item","unshift","Array","isArray","velocity","duration","getTickDuration","a","b","toLowerCase","charAt","substring","tickDuration","numberFromBytes","getDurationMultiplier","getRoundedIfClose","tick","roundedTick","abs","dotted","base","tuplet","Number","durationInQuarters","_match$groups","thisManyDots","divisor","pow","Error","NoteOnEvent","fields","assign","channel","startTick","wait","type","delta","data","track","precisionDelta","options","tickPointer","deltaWithPrecisionCorrection","numberToVariableLength","concat","getStatusByte","getPitch","convertVelocity","NoteOffEvent","NoteEvent","repeat","sequential","toArray","grace","restDuration","events","noteEvent","j","noteOnNew","noteOffNew","PitchBendEvent","zeroOne","bend14","bend","floor","lsbValue","msbValue","ProgramChangeEvent","instrument","ControllerChangeEvent","controllerNumber","controllerValue","CopyrightEvent","textBytes","stringToBytes","text","CuePointEvent","EndTrackEvent","InstrumentNameEvent","KeySignatureEvent","sf","mi","mode","_sflen","note","toUpperCase","fifthindex","indexOf","numberToBytes","LyricEvent","MarkerEvent","TempoEvent","tempo","bpm","TextEvent","TimeSignatureEvent","numerator","denominator","midiclockspertick","notespermidiclock","log2","TrackNameEvent","Track","size","explicitTickEvents","mapFunction","event","properties","buildData","e","_this2","removeEventsByType","addEvent","precisionLoss","eventIndex","built","getPrecisionLoss","mergeExplicitTickEvents","_this3","sort","mergeSingleEvent","_this4","lastEventIndex","splicedEventIndex","splice","eventType","_this5","index","VexFlow","voice","addRenderedAccidentals","tickables","tickable","noteType","convertPitch","convertDuration","_note$getAccidentals","pitchParts","accidentals","getAccidentals","accidental","dots","convertBaseDuration","num_notes","HeaderChunk","numberOfTracks","trackType","Writer","tracks","build","d","Uint8Array","btoa","String","fromCharCode","buildFile","Buffer","from","base64","process","stdout","write","main","module","exports","require","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","fromString","isBuffer","len","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","equals","inspect","max","join","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","log","LN2","isNum","midiToFreq","midi","tuning","REGEX","SEMITONES","parse","isTonic","letter","acc","pc","step","alt","chroma","oct","freq","tonicOf","isDef","FLATS","SHARPS","sharps"],"mappings":"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","file":"static/js/3.8476f6a1.chunk.js","sourcesContent":["'use strict';\n\nvar tonalMidi = require('tonal-midi');\n\n/**\n * MIDI file format constants.\n * @return {Constants}\n */\nvar Constants = {\n  VERSION: '2.1.0',\n  HEADER_CHUNK_TYPE: [0x4d, 0x54, 0x68, 0x64],\n  // Mthd\n  HEADER_CHUNK_LENGTH: [0x00, 0x00, 0x00, 0x06],\n  // Header size for SMF\n  HEADER_CHUNK_FORMAT0: [0x00, 0x00],\n  // Midi Type 0 id\n  HEADER_CHUNK_FORMAT1: [0x00, 0x01],\n  // Midi Type 1 id\n  HEADER_CHUNK_DIVISION: [0x00, 0x80],\n  // Defaults to 128 ticks per beat\n  TRACK_CHUNK_TYPE: [0x4d, 0x54, 0x72, 0x6b],\n  // MTrk,\n  META_EVENT_ID: 0xFF,\n  META_TEXT_ID: 0x01,\n  META_COPYRIGHT_ID: 0x02,\n  META_TRACK_NAME_ID: 0x03,\n  META_INSTRUMENT_NAME_ID: 0x04,\n  META_LYRIC_ID: 0x05,\n  META_MARKER_ID: 0x06,\n  META_CUE_POINT: 0x07,\n  META_TEMPO_ID: 0x51,\n  META_SMTPE_OFFSET: 0x54,\n  META_TIME_SIGNATURE_ID: 0x58,\n  META_KEY_SIGNATURE_ID: 0x59,\n  META_END_OF_TRACK_ID: [0x2F, 0x00],\n  CONTROLLER_CHANGE_STATUS: 0xB0,\n  // includes channel number (0)\n  PROGRAM_CHANGE_STATUS: 0xC0,\n  // includes channel number (0)\n  PITCH_BEND_STATUS: 0xE0 // includes channel number (0)\n\n};\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _wrapRegExp() {\n  _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n\n  var _super = RegExp.prototype,\n      _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      return groups[name] = result[g[name]], groups;\n    }, Object.create(null));\n  }\n\n  return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    return result && (result.groups = buildGroups(result, this)), result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    }\n\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != typeof args[args.length - 1] && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\n/**\n * Static utility functions used throughout the library.\n */\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"version\",\n    value:\n    /**\n     * Gets MidiWriterJS version number.\n     * @return {string}\n     */\n    function version() {\n      return Constants.VERSION;\n    }\n    /**\n     * Convert a string to an array of bytes\n     * @param {string} string\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringToBytes\",\n    value: function stringToBytes(string) {\n      return string.split('').map(function (_char) {\n        return _char.charCodeAt();\n      });\n    }\n    /**\n     * Checks if argument is a valid number.\n     * @param {*} n - Value to check\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"isNumeric\",\n    value: function isNumeric(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n    /**\n     * Returns the correct MIDI number for the specified pitch.\n     * Uses Tonal Midi - https://github.com/danigb/tonal/tree/master/packages/midi\n     * @param {(string|number)} pitch - 'C#4' or midi note code\n     * @param {string} middleC\n     * @return {number}\n     */\n\n  }, {\n    key: \"getPitch\",\n    value: function getPitch(pitch) {\n      var middleC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'C4';\n      return 60 - tonalMidi.toMidi(middleC) + tonalMidi.toMidi(pitch);\n    }\n    /**\n     * Translates number of ticks to MIDI timestamp format, returning an array of\n     * hex strings with the time values. Midi has a very particular time to express time,\n     * take a good look at the spec before ever touching this function.\n     * Thanks to https://github.com/sergi/jsmidi\n     *\n     * @param {number} ticks - Number of ticks to be translated\n     * @return {array} - Bytes that form the MIDI time value\n     */\n\n  }, {\n    key: \"numberToVariableLength\",\n    value: function numberToVariableLength(ticks) {\n      ticks = Math.round(ticks);\n      var buffer = ticks & 0x7F;\n\n      while (ticks = ticks >> 7) {\n        buffer <<= 8;\n        buffer |= ticks & 0x7F | 0x80;\n      }\n\n      var bList = [];\n\n      while (true) {\n        bList.push(buffer & 0xff);\n        if (buffer & 0x80) buffer >>= 8;else {\n          break;\n        }\n      }\n\n      return bList;\n    }\n    /**\n     * Counts number of bytes in string\n     * @param {string} s\n     * @return {array}\n     */\n\n  }, {\n    key: \"stringByteCount\",\n    value: function stringByteCount(s) {\n      return encodeURI(s).split(/%..|./).length - 1;\n    }\n    /**\n     * Get an int from an array of bytes.\n     * @param {array} bytes\n     * @return {number}\n     */\n\n  }, {\n    key: \"numberFromBytes\",\n    value: function numberFromBytes(bytes) {\n      var hex = '';\n      var stringResult;\n      bytes.forEach(function (_byte) {\n        stringResult = _byte.toString(16); // ensure string is 2 chars\n\n        if (stringResult.length == 1) stringResult = \"0\" + stringResult;\n        hex += stringResult;\n      });\n      return parseInt(hex, 16);\n    }\n    /**\n     * Takes a number and splits it up into an array of bytes.  Can be padded by passing a number to bytesNeeded\n     * @param {number} number\n     * @param {number} bytesNeeded\n     * @return {array} - Array of bytes\n     */\n\n  }, {\n    key: \"numberToBytes\",\n    value: function numberToBytes(number, bytesNeeded) {\n      bytesNeeded = bytesNeeded || 1;\n      var hexString = number.toString(16);\n\n      if (hexString.length & 1) {\n        // Make sure hex string is even number of chars\n        hexString = '0' + hexString;\n      } // Split hex string into an array of two char elements\n\n\n      var hexArray = hexString.match(/.{2}/g); // Now parse them out as integers\n\n      hexArray = hexArray.map(function (item) {\n        return parseInt(item, 16);\n      }); // Prepend empty bytes if we don't have enough\n\n      if (hexArray.length < bytesNeeded) {\n        while (bytesNeeded - hexArray.length > 0) {\n          hexArray.unshift(0);\n        }\n      }\n\n      return hexArray;\n    }\n    /**\n     * Converts value to array if needed.\n     * @param {string} value\n     * @return {array}\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function toArray(value) {\n      if (Array.isArray(value)) return value;\n      return [value];\n    }\n    /**\n     * Converts velocity to value 0-127\n     * @param {number} velocity - Velocity value 1-100\n     * @return {number}\n     */\n\n  }, {\n    key: \"convertVelocity\",\n    value: function convertVelocity(velocity) {\n      // Max passed value limited to 100\n      velocity = velocity > 100 ? 100 : velocity;\n      return Math.round(velocity / 100 * 127);\n    }\n    /**\n     * Gets the total number of ticks of a specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {(string|array)} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getTickDuration\",\n    value: function getTickDuration(duration) {\n      if (Array.isArray(duration)) {\n        // Recursively execute this method for each item in the array and return the sum of tick durations.\n        return duration.map(function (value) {\n          return Utils.getTickDuration(value);\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      }\n\n      duration = duration.toString();\n\n      if (duration.toLowerCase().charAt(0) === 't') {\n        // If duration starts with 't' then the number that follows is an explicit tick count\n        return parseInt(duration.substring(1));\n      } // Need to apply duration here.  Quarter note == Constants.HEADER_CHUNK_DIVISION\n\n\n      var quarterTicks = Utils.numberFromBytes(Constants.HEADER_CHUNK_DIVISION);\n      var tickDuration = quarterTicks * Utils.getDurationMultiplier(duration);\n      return Utils.getRoundedIfClose(tickDuration);\n    }\n    /**\n     * Due to rounding errors in JavaScript engines,\n     * it's safe to round when we're very close to the actual tick number\n     *\n     * @static\n     * @param {number} tick\n     * @return {number}\n     */\n\n  }, {\n    key: \"getRoundedIfClose\",\n    value: function getRoundedIfClose(tick) {\n      var roundedTick = Math.round(tick);\n      return Math.abs(roundedTick - tick) < 0.000001 ? roundedTick : tick;\n    }\n    /**\n     * Due to low precision of MIDI,\n     * we need to keep track of rounding errors in deltas.\n     * This function will calculate the rounding error for a given duration.\n     *\n     * @static\n     * @param {number} tick\n     * @return {number}\n     */\n\n  }, {\n    key: \"getPrecisionLoss\",\n    value: function getPrecisionLoss(tick) {\n      var roundedTick = Math.round(tick);\n      return roundedTick - tick;\n    }\n    /**\n     * Gets what to multiple ticks/quarter note by to get the specified duration.\n     * Note: type=='note' defaults to quarter note, type==='rest' defaults to 0\n     * @param {string} duration\n     * @return {number}\n     */\n\n  }, {\n    key: \"getDurationMultiplier\",\n    value: function getDurationMultiplier(duration) {\n      // Need to apply duration here.\n      // Quarter note == Constants.HEADER_CHUNK_DIVISION ticks.\n      if (duration === '0') return 0;\n      var match = duration.match( /*#__PURE__*/_wrapRegExp(/^(d+)?(\\d+)(?:t(\\d*))?/, {\n        dotted: 1,\n        base: 2,\n        tuplet: 3\n      }));\n\n      if (match) {\n        var base = Number(match.groups.base); // 1 or any power of two:\n\n        var isValidBase = base === 1 || (base & base - 1) === 0;\n\n        if (isValidBase) {\n          // how much faster or slower is this note compared to a quarter?\n          var ratio = base / 4;\n          var durationInQuarters = 1 / ratio;\n          var _match$groups = match.groups,\n              dotted = _match$groups.dotted,\n              tuplet = _match$groups.tuplet;\n\n          if (dotted) {\n            var thisManyDots = dotted.length;\n            var divisor = Math.pow(2, thisManyDots);\n            durationInQuarters = durationInQuarters + durationInQuarters * ((divisor - 1) / divisor);\n          }\n\n          if (typeof tuplet === 'string') {\n            var fitInto = durationInQuarters * 2; // default to triplet:\n\n            var thisManyNotes = Number(tuplet || '3');\n            durationInQuarters = fitInto / thisManyNotes;\n          }\n\n          return durationInQuarters;\n        }\n      }\n\n      throw new Error(duration + ' is not a valid duration.');\n    }\n  }]);\n\n  return Utils;\n}();\n\n/**\n * Holds all data for a \"note on\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOnEvent}\n */\n\nvar NoteOnEvent = /*#__PURE__*/function () {\n  function NoteOnEvent(fields) {\n    _classCallCheck(this, NoteOnEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.type = 'note-on';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.wait = fields.wait;\n    this.velocity = fields.velocity;\n    this.startTick = fields.startTick;\n    this.tick = null;\n    this.delta = null;\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOnEvent}\n   */\n\n\n  _createClass(NoteOnEvent, [{\n    key: \"buildData\",\n    value: function buildData(track, precisionDelta) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.data = []; // Explicitly defined startTick event\n\n      if (this.startTick) {\n        this.tick = Utils.getRoundedIfClose(this.startTick); // If this is the first event in the track then use event's starting tick as delta.\n\n        if (track.tickPointer == 0) {\n          this.delta = this.tick;\n        }\n      } else {\n        this.delta = Utils.getTickDuration(this.wait);\n        this.tick = Utils.getRoundedIfClose(track.tickPointer + this.delta);\n      }\n\n      this.deltaWithPrecisionCorrection = Utils.getRoundedIfClose(this.delta - precisionDelta);\n      this.data = Utils.numberToVariableLength(this.deltaWithPrecisionCorrection).concat(this.getStatusByte(), Utils.getPitch(this.pitch, options.middleC), Utils.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note on status code based on the selected channel. 0x9{0-F}\n     * Note on at channel 0 is 0x90 (144)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 144 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOnEvent;\n}();\n\n/**\n * Holds all data for a \"note off\" MIDI event\n * @param {object} fields {data: []}\n * @return {NoteOffEvent}\n */\n\nvar NoteOffEvent = /*#__PURE__*/function () {\n  function NoteOffEvent(fields) {\n    _classCallCheck(this, NoteOffEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      velocity: 50,\n      tick: null\n    }, fields);\n    this.type = 'note-off';\n    this.channel = fields.channel;\n    this.pitch = fields.pitch;\n    this.duration = fields.duration;\n    this.velocity = fields.velocity;\n    this.tick = fields.tick;\n    this.delta = Utils.getTickDuration(this.duration);\n    this.data = fields.data;\n  }\n  /**\n   * Builds int array for this event.\n   * @param {Track} track - parent track\n   * @return {NoteOffEvent}\n   */\n\n\n  _createClass(NoteOffEvent, [{\n    key: \"buildData\",\n    value: function buildData(track, precisionDelta) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (this.tick === null) {\n        this.tick = Utils.getRoundedIfClose(this.delta + track.tickPointer);\n      }\n\n      this.deltaWithPrecisionCorrection = Utils.getRoundedIfClose(this.delta - precisionDelta);\n      this.data = Utils.numberToVariableLength(this.deltaWithPrecisionCorrection).concat(this.getStatusByte(), Utils.getPitch(this.pitch, options.middleC), Utils.convertVelocity(this.velocity));\n      return this;\n    }\n    /**\n     * Gets the note off status code based on the selected channel. 0x8{0-F}\n     * Note off at channel 0 is 0x80 (128)\n     * 0 = Ch 1\n     * @return {number}\n     */\n\n  }, {\n    key: \"getStatusByte\",\n    value: function getStatusByte() {\n      return 128 + this.channel - 1;\n    }\n  }]);\n\n  return NoteOffEvent;\n}();\n\n/**\n * Wrapper for noteOnEvent/noteOffEvent objects that builds both events.\n * @param {object} fields - {pitch: '[C4]', duration: '4', wait: '4', velocity: 1-100}\n * @return {NoteEvent}\n */\n\nvar NoteEvent = /*#__PURE__*/function () {\n  function NoteEvent(fields) {\n    _classCallCheck(this, NoteEvent);\n\n    // Set default fields\n    fields = Object.assign({\n      channel: 1,\n      repeat: 1,\n      sequential: false,\n      startTick: null,\n      velocity: 50,\n      wait: 0\n    }, fields);\n    this.data = [];\n    this.type = 'note';\n    this.pitch = Utils.toArray(fields.pitch);\n    this.channel = fields.channel;\n    this.duration = fields.duration;\n    this.grace = fields.grace;\n    this.repeat = fields.repeat;\n    this.sequential = fields.sequential;\n    this.startTick = fields.startTick;\n    this.velocity = fields.velocity;\n    this.wait = fields.wait;\n    this.tickDuration = Utils.getTickDuration(this.duration);\n    this.restDuration = Utils.getTickDuration(this.wait);\n    this.events = []; // Hold actual NoteOn/NoteOff events\n  }\n  /**\n   * Builds int array for this event.\n   * @return {NoteEvent}\n   */\n\n\n  _createClass(NoteEvent, [{\n    key: \"buildData\",\n    value: function buildData() {\n      var _this = this;\n\n      // Reset data array\n      this.data = [];\n      this.tickDuration;\n      this.restDuration; // Apply grace note(s) and subtract ticks (currently 1 tick per grace note) from tickDuration so net value is the same\n\n      if (this.grace) {\n        var graceDuration = 1;\n        this.grace = Utils.toArray(this.grace);\n        this.grace.forEach(function (pitch) {\n          var noteEvent = new NoteEvent({\n            pitch: _this.grace,\n            duration: 'T' + graceDuration\n          });\n          _this.data = _this.data.concat(noteEvent.data);\n        });\n      } // fields.pitch could be an array of pitches.\n      // If this.sequential === true then it's a sequential string of notes that requires separate NoteOnEvents.\n\n      if (!this.sequential) {\n        // Handle repeat\n        for (var j = 0; j < this.repeat; j++) {\n          // Note on\n          this.pitch.forEach(function (p, i) {\n            if (i == 0) {\n              var noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: _this.wait,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            } else {\n              // Running status (can ommit the note on status)\n              //noteOn = new NoteOnEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              var noteOnNew = new NoteOnEvent({\n                channel: _this.channel,\n                wait: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                startTick: _this.startTick\n              });\n            }\n\n            _this.events.push(noteOnNew);\n          }); // Note off\n\n          this.pitch.forEach(function (p, i) {\n            if (i == 0) {\n              //noteOff = new NoteOffEvent({data: Utils.numberToVariableLength(tickDuration).concat(this.getNoteOffStatus(), Utils.getPitch(p), Utils.convertVelocity(this.velocity))});\n              var noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: _this.duration,\n                velocity: _this.velocity,\n                pitch: p,\n                tick: _this.startTick !== null ? Utils.getTickDuration(_this.duration) + _this.startTick : null\n              });\n            } else {\n              // Running status (can ommit the note off status)\n              //noteOff = new NoteOffEvent({data: [0, Utils.getPitch(p), Utils.convertVelocity(this.velocity)]});\n              var noteOffNew = new NoteOffEvent({\n                channel: _this.channel,\n                duration: 0,\n                velocity: _this.velocity,\n                pitch: p,\n                tick: _this.startTick !== null ? Utils.getTickDuration(_this.duration) + _this.startTick : null\n              });\n            }\n\n            _this.events.push(noteOffNew);\n          });\n        }\n      } else {\n        // Handle repeat\n        for (var j = 0; j < this.repeat; j++) {\n          this.pitch.forEach(function (p, i) {\n\n            var noteOnNew = new NoteOnEvent({\n              channel: _this.channel,\n              wait: i > 0 ? 0 : _this.wait,\n              // wait only applies to first note in repetition\n              velocity: _this.velocity,\n              pitch: p,\n              startTick: _this.startTick\n            });\n            var noteOffNew = new NoteOffEvent({\n              channel: _this.channel,\n              duration: _this.duration,\n              velocity: _this.velocity,\n              pitch: p\n            });\n\n            _this.events.push(noteOnNew, noteOffNew);\n          });\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return NoteEvent;\n}();\n\n/**\n * Holds all data for a \"Pitch Bend\" MIDI event\n * [ -1.0, 0, 1.0 ] ->  [ 0, 8192, 16383]\n * @param {object} fields { bend : float, channel : int, delta: int }\n * @return {PitchBendEvent}\n */\n\nvar scale14bits = function scale14bits(zeroOne) {\n  if (zeroOne <= 0) {\n    return Math.floor(16384 * (zeroOne + 1) / 2);\n  }\n\n  return Math.floor(16383 * (zeroOne + 1) / 2);\n};\n\nvar PitchBendEvent = /*#__PURE__*/_createClass(function PitchBendEvent(fields) {\n  _classCallCheck(this, PitchBendEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'pitch-bend';\n  var bend14 = scale14bits(fields.bend);\n  var channel = fields.channel || 0;\n  var lsbValue = bend14 & 0x7f;\n  var msbValue = bend14 >> 7 & 0x7f;\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.PITCH_BEND_STATUS | channel, lsbValue, msbValue);\n});\n\n/**\n * Holds all data for a \"program change\" MIDI event\n * @param {object} fields {instrument: integer, delta: integer}\n * @return {ProgramChangeEvent}\n */\n\nvar ProgramChangeEvent = /*#__PURE__*/_createClass(function ProgramChangeEvent(fields) {\n  _classCallCheck(this, ProgramChangeEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'program'; // delta time defaults to 0.\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.PROGRAM_CHANGE_STATUS, fields.instrument);\n});\n\n/**\n * Holds all data for a \"controller change\" MIDI event\n * @param {object} fields {controllerNumber: integer, controllerValue: integer, delta: integer}\n * @return {ControllerChangeEvent}\n */\n\nvar ControllerChangeEvent = /*#__PURE__*/_createClass(function ControllerChangeEvent(fields) {\n  _classCallCheck(this, ControllerChangeEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'controller'; // delta time defaults to 0.\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.CONTROLLER_CHANGE_STATUS, fields.controllerNumber, fields.controllerValue);\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {CopyrightEvent}\n */\n\nvar CopyrightEvent = /*#__PURE__*/_createClass(function CopyrightEvent(fields) {\n  _classCallCheck(this, CopyrightEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'copyright';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_COPYRIGHT_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a cue point meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {CuePointEvent}\n */\n\nvar CuePointEvent = /*#__PURE__*/_createClass(function CuePointEvent(fields) {\n  _classCallCheck(this, CuePointEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'cue-point';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_CUE_POINT, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a end track meta event.\n * @param {object} fields {delta: integer}\n * @return {EndTrackEvent}\n */\n\nvar EndTrackEvent = /*#__PURE__*/_createClass(function EndTrackEvent(fields) {\n  _classCallCheck(this, EndTrackEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'end-track'; // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_END_OF_TRACK_ID);\n});\n\n/**\n * Object representation of an instrument name meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {InstrumentNameEvent}\n */\n\nvar InstrumentNameEvent = /*#__PURE__*/_createClass(function InstrumentNameEvent(fields) {\n  _classCallCheck(this, InstrumentNameEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'instrument-name';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_INSTRUMENT_NAME_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Instrument name\n  );\n});\n\n/**\n * Object representation of a key signature meta event.\n * @return {KeySignatureEvent}\n */\n\nvar KeySignatureEvent = /*#__PURE__*/_createClass(function KeySignatureEvent(sf, mi) {\n  _classCallCheck(this, KeySignatureEvent);\n\n  this.type = 'key-signature';\n  var mode = mi || 0;\n  sf = sf || 0; //\tFunction called with string notation\n\n  if (typeof mi === 'undefined') {\n    var fifths = [['Cb', 'Gb', 'Db', 'Ab', 'Eb', 'Bb', 'F', 'C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#'], ['ab', 'eb', 'bb', 'f', 'c', 'g', 'd', 'a', 'e', 'b', 'f#', 'c#', 'g#', 'd#', 'a#']];\n    var _sflen = sf.length;\n    var note = sf || 'C';\n    if (sf[0] === sf[0].toLowerCase()) mode = 1;\n\n    if (_sflen > 1) {\n      switch (sf.charAt(_sflen - 1)) {\n        case 'm':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '-':\n          mode = 1;\n          note = sf.charAt(0).toLowerCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case 'M':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n\n        case '+':\n          mode = 0;\n          note = sf.charAt(0).toUpperCase();\n          note = note.concat(sf.substring(1, _sflen - 1));\n          break;\n      }\n    }\n\n    var fifthindex = fifths[mode].indexOf(note);\n    sf = fifthindex === -1 ? 0 : fifthindex - 7;\n  } // Start with zero time delta\n\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_KEY_SIGNATURE_ID, [0x02], // Size\n  Utils.numberToBytes(sf, 1), // Number of sharp or flats ( < 0 flat; > 0 sharp)\n  Utils.numberToBytes(mode, 1) // Mode: 0 major, 1 minor\n  );\n});\n\n/**\n * Object representation of a lyric meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {LyricEvent}\n */\n\nvar LyricEvent = /*#__PURE__*/_createClass(function LyricEvent(fields) {\n  _classCallCheck(this, LyricEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'lyric';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_LYRIC_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a marker meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {MarkerEvent}\n */\n\nvar MarkerEvent = /*#__PURE__*/_createClass(function MarkerEvent(fields) {\n  _classCallCheck(this, MarkerEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'marker';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_MARKER_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {bpm: integer, delta: integer}\n * @return {TempoEvent}\n */\n\nvar TempoEvent = /*#__PURE__*/_createClass(function TempoEvent(fields) {\n  _classCallCheck(this, TempoEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'tempo';\n  this.tick = fields.tick;\n  var tempo = Math.round(60000000 / fields.bpm); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TEMPO_ID, [0x03], // Size\n  Utils.numberToBytes(tempo, 3) // Tempo, 3 bytes\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {TextEvent}\n */\n\nvar TextEvent = /*#__PURE__*/_createClass(function TextEvent(fields) {\n  _classCallCheck(this, TextEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'text';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TEXT_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Object representation of a time signature meta event.\n * @return {TimeSignatureEvent}\n */\n\nvar TimeSignatureEvent = /*#__PURE__*/_createClass(function TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock) {\n  _classCallCheck(this, TimeSignatureEvent);\n\n  this.type = 'time-signature'; // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(0x00).concat(Constants.META_EVENT_ID, Constants.META_TIME_SIGNATURE_ID, [0x04], // Size\n  Utils.numberToBytes(numerator, 1), // Numerator, 1 bytes\n  Utils.numberToBytes(Math.log2(denominator), 1), // Denominator is expressed as pow of 2, 1 bytes\n  Utils.numberToBytes(midiclockspertick || 24, 1), // MIDI Clocks per tick, 1 bytes\n  Utils.numberToBytes(notespermidiclock || 8, 1) // Number of 1/32 notes per MIDI clocks, 1 bytes\n  );\n});\n\n/**\n * Object representation of a tempo meta event.\n * @param {object} fields {text: string, delta: integer}\n * @return {TrackNameEvent}\n */\n\nvar TrackNameEvent = /*#__PURE__*/_createClass(function TrackNameEvent(fields) {\n  _classCallCheck(this, TrackNameEvent);\n\n  // Set default fields\n  fields = Object.assign({\n    delta: 0x00\n  }, fields);\n  this.type = 'track-name';\n  var textBytes = Utils.stringToBytes(fields.text); // Start with zero time delta\n\n  this.data = Utils.numberToVariableLength(fields.delta).concat(Constants.META_EVENT_ID, Constants.META_TRACK_NAME_ID, Utils.numberToVariableLength(textBytes.length), // Size\n  textBytes // Text\n  );\n});\n\n/**\n * Holds all data for a track.\n * @param {object} fields {type: number, data: array, size: array, events: array}\n * @return {Track}\n */\n\nvar Track = /*#__PURE__*/function () {\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.type = Constants.TRACK_CHUNK_TYPE;\n    this.data = [];\n    this.size = [];\n    this.events = [];\n    this.explicitTickEvents = []; // If there are any events with an explicit tick defined then we will create a \"sub\" track for those\n    // and merge them in and the end.\n\n    this.tickPointer = 0; // Each time an event is added this will increase\n  }\n  /**\n   * Adds any event type to the track.\n   * Events without a specific startTick property are assumed to be added in order of how they should output.\n   * Events with a specific startTick property are set aside for now will be merged in during build process.\n   * @param {(NoteEvent|ProgramChangeEvent)} events - Event object or array of Event objects.\n   * @param {function} mapFunction - Callback which can be used to apply specific properties to all events.\n   * @return {Track}\n   */\n\n\n  _createClass(Track, [{\n    key: \"addEvent\",\n    value: function addEvent(events, mapFunction) {\n      var _this = this;\n\n      Utils.toArray(events).forEach(function (event, i) {\n        if (event instanceof NoteEvent) {\n          // Handle map function if provided\n          if (typeof mapFunction === 'function') {\n            var properties = mapFunction(i, event);\n\n            if (_typeof(properties) === 'object') {\n              for (var j in properties) {\n                switch (j) {\n                  case 'channel':\n                    event.channel = properties[j];\n                    break;\n\n                  case 'duration':\n                    event.duration = properties[j];\n                    break;\n\n                  case 'sequential':\n                    event.sequential = properties[j];\n                    break;\n\n                  case 'velocity':\n                    event.velocity = Utils.convertVelocity(properties[j]);\n                    break;\n                }\n              }\n            }\n          } // If this note event has an explicit startTick then we need to set aside for now\n\n\n          if (event.startTick !== null) {\n            _this.explicitTickEvents.push(event);\n          } else {\n            // Push each on/off event to track's event stack\n            event.buildData().events.forEach(function (e) {\n              return _this.events.push(e);\n            });\n          }\n        } else {\n          _this.events.push(event);\n        }\n      });\n      return this;\n    }\n    /**\n     * Builds int array of all events.\n     * @param {object} options\n     * @return {Track}\n     */\n\n  }, {\n    key: \"buildData\",\n    value: function buildData() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // Remove existing end track event and add one.\n      // This makes sure it's at the very end of the event list.\n      this.removeEventsByType('end-track').addEvent(new EndTrackEvent()); // Reset\n\n      this.data = [];\n      this.size = [];\n      this.tickPointer = 0;\n      var precisionLoss = 0;\n      this.events.forEach(function (event, eventIndex) {\n        // Build event & add to total tick duration\n        if (event instanceof NoteOnEvent || event instanceof NoteOffEvent) {\n          var built = event.buildData(_this2, precisionLoss, options);\n          precisionLoss = Utils.getPrecisionLoss(event.deltaWithPrecisionCorrection || 0);\n          _this2.data = _this2.data.concat(built.data);\n          _this2.tickPointer = Utils.getRoundedIfClose(event.tick);\n        } else if (event instanceof TempoEvent) {\n          _this2.tickPointer = Utils.getRoundedIfClose(event.tick);\n          _this2.data = _this2.data.concat(event.data);\n        } else {\n          _this2.data = _this2.data.concat(event.data);\n        }\n      });\n      this.mergeExplicitTickEvents();\n      this.size = Utils.numberToBytes(this.data.length, 4); // 4 bytes long\n\n      return this;\n    }\n  }, {\n    key: \"mergeExplicitTickEvents\",\n    value: function mergeExplicitTickEvents() {\n      var _this3 = this;\n\n      if (!this.explicitTickEvents.length) return; // First sort asc list of events by startTick\n\n      this.explicitTickEvents.sort(function (a, b) {\n        return a.startTick - b.startTick;\n      }); // Now this.explicitTickEvents is in correct order, and so is this.events naturally.\n      // For each explicit tick event, splice it into the main list of events and\n      // adjust the delta on the following events so they still play normally.\n\n      this.explicitTickEvents.forEach(function (noteEvent) {\n        // Convert NoteEvent to it's respective NoteOn/NoteOff events\n        // Note that as we splice in events the delta for the NoteOff ones will\n        // Need to change based on what comes before them after the splice.\n        noteEvent.buildData().events.forEach(function (e) {\n          return e.buildData(_this3);\n        }); // Merge each event indivually into this track's event list.\n\n        noteEvent.events.forEach(function (event) {\n          return _this3.mergeSingleEvent(event);\n        });\n      }); // Hacky way to rebuild track with newly spliced events.  Need better solution.\n\n      this.explicitTickEvents = [];\n      this.buildData();\n    }\n    /**\n     * Merges another track's events with this track.\n     * @param {Track} track\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeTrack\",\n    value: function mergeTrack(track) {\n      var _this4 = this;\n\n      // First build this track to populate each event's tick property\n      this.buildData(); // Then build track to be merged so that tick property is populated on all events & merge each event.\n\n      track.buildData().events.forEach(function (event) {\n        return _this4.mergeSingleEvent(event);\n      });\n    }\n    /**\n     * Merges a single event into this track's list of events based on event.tick property.\n     * @param {NoteOnEvent|NoteOffEvent} - event\n     * @return {Track}\n     */\n\n  }, {\n    key: \"mergeSingleEvent\",\n    value: function mergeSingleEvent(event) {\n      // Find index of existing event we need to follow with\n      var lastEventIndex = 0;\n\n      for (var i = 0; i < this.events.length; i++) {\n        if (this.events[i].tick > event.tick) break;\n        lastEventIndex = i;\n      }\n\n      var splicedEventIndex = lastEventIndex + 1; // Need to adjust the delta of this event to ensure it falls on the correct tick.\n\n      event.delta = event.tick - this.events[lastEventIndex].tick; // Splice this event at lastEventIndex + 1\n\n      this.events.splice(splicedEventIndex, 0, event); // Now adjust delta of all following events\n\n      for (var i = splicedEventIndex + 1; i < this.events.length; i++) {\n        // Since each existing event should have a tick value at this point we just need to\n        // adjust delta to that the event still falls on the correct tick.\n        this.events[i].delta = this.events[i].tick - this.events[i - 1].tick;\n      }\n    }\n    /**\n     * Removes all events matching specified type.\n     * @param {string} eventType - Event type\n     * @return {Track}\n     */\n\n  }, {\n    key: \"removeEventsByType\",\n    value: function removeEventsByType(eventType) {\n      var _this5 = this;\n\n      this.events.forEach(function (event, index) {\n        if (event.type === eventType) {\n          _this5.events.splice(index, 1);\n        }\n      });\n      return this;\n    }\n    /**\n     * Sets tempo of the MIDI file.\n     * @param {number} bpm - Tempo in beats per minute.\n     * @param {number} tick - Start tick.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTempo\",\n    value: function setTempo(bpm) {\n      var tick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this.addEvent(new TempoEvent({\n        bpm: bpm,\n        tick: tick\n      }));\n    }\n    /**\n     * Sets time signature.\n     * @param {number} numerator - Top number of the time signature.\n     * @param {number} denominator - Bottom number of the time signature.\n     * @param {number} midiclockspertick - Defaults to 24.\n     * @param {number} notespermidiclock - Defaults to 8.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setTimeSignature\",\n    value: function setTimeSignature(numerator, denominator, midiclockspertick, notespermidiclock) {\n      return this.addEvent(new TimeSignatureEvent(numerator, denominator, midiclockspertick, notespermidiclock));\n    }\n    /**\n     * Sets key signature.\n     * @param {*} sf -\n     * @param {*} mi -\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setKeySignature\",\n    value: function setKeySignature(sf, mi) {\n      return this.addEvent(new KeySignatureEvent(sf, mi));\n    }\n    /**\n     * Adds text to MIDI file.\n     * @param {string} text - Text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addText\",\n    value: function addText(text) {\n      return this.addEvent(new TextEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds copyright to MIDI file.\n     * @param {string} text - Text of copyright line.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCopyright\",\n    value: function addCopyright(text) {\n      return this.addEvent(new CopyrightEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds Sequence/Track Name.\n     * @param {string} text - Text of track name.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addTrackName\",\n    value: function addTrackName(text) {\n      return this.addEvent(new TrackNameEvent({\n        text: text\n      }));\n    }\n    /**\n     * Sets instrument name of track.\n     * @param {string} text - Name of instrument.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addInstrumentName\",\n    value: function addInstrumentName(text) {\n      return this.addEvent(new InstrumentNameEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds marker to MIDI file.\n     * @param {string} text - Marker text.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(text) {\n      return this.addEvent(new MarkerEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds cue point to MIDI file.\n     * @param {string} text - Text of cue point.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(text) {\n      return this.addEvent(new CuePointEvent({\n        text: text\n      }));\n    }\n    /**\n     * Adds lyric to MIDI file.\n     * @param {string} text - Lyric text to add.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"addLyric\",\n    value: function addLyric(text) {\n      return this.addEvent(new LyricEvent({\n        text: text\n      }));\n    }\n    /**\n     * Channel mode messages\n     * @return {Track}\n     */\n\n  }, {\n    key: \"polyModeOn\",\n    value: function polyModeOn() {\n      var event = new NoteOnEvent({\n        data: [0x00, 0xB0, 0x7E, 0x00]\n      });\n      return this.addEvent(event);\n    }\n    /**\n     * Sets a pitch bend.\n     * @param {float} bend - Bend value ranging [-1,1], zero meaning no bend.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"setPitchBend\",\n    value: function setPitchBend(bend) {\n      return this.addEvent(new PitchBendEvent({\n        bend: bend\n      }));\n    }\n    /**\n     * Adds a controller change event\n     * @param {number} number - Control number.\n     * @param {number} value - Control value.\n     * @return {Track}\n     */\n\n  }, {\n    key: \"controllerChange\",\n    value: function controllerChange(number, value) {\n      return this.addEvent(new ControllerChangeEvent({\n        controllerNumber: number,\n        controllerValue: value\n      }));\n    }\n  }]);\n\n  return Track;\n}();\n\nvar VexFlow = /*#__PURE__*/function () {\n  function VexFlow() {\n    _classCallCheck(this, VexFlow);\n  }\n\n  _createClass(VexFlow, [{\n    key: \"trackFromVoice\",\n    value:\n    /**\n     * Support for converting VexFlow voice into MidiWriterJS track\n     * @return MidiWriter.Track object\n     */\n    function trackFromVoice(voice) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        addRenderedAccidentals: false\n      };\n      var track = new Track();\n      var wait = [];\n      voice.tickables.forEach(function (tickable) {\n        if (tickable.noteType === 'n') {\n          track.addEvent(new NoteEvent({\n            pitch: tickable.keys.map(function (pitch, index) {\n              return _this.convertPitch(pitch, index, tickable, options.addRenderedAccidentals);\n            }),\n            duration: _this.convertDuration(tickable),\n            wait: wait\n          })); // reset wait\n\n          wait = [];\n        } else if (tickable.noteType === 'r') {\n          // move on to the next tickable and add this to the stack\n          // of the `wait` property for the next note event\n          wait.push(_this.convertDuration(tickable));\n          return;\n        }\n      }); // There may be outstanding rests at the end of the track,\n      // pad with a ghost note (zero duration and velocity), just to capture the wait.\n\n      if (wait.length > 0) {\n        track.addEvent(new NoteEvent({\n          pitch: '[c4]',\n          duration: '0',\n          wait: wait,\n          velocity: '0'\n        }));\n      }\n\n      return track;\n    }\n    /**\n     * Converts VexFlow pitch syntax to MidiWriterJS syntax\n     * @param pitch string\n     * @param index pitch index\n     * @param note struct from Vexflow\n     * @param addRenderedAccidentals adds Vexflow rendered accidentals\n     */\n\n  }, {\n    key: \"convertPitch\",\n    value: function convertPitch(pitch, index, note) {\n      var addRenderedAccidentals = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      // Splits note name from octave\n      var pitchParts = pitch.split('/'); // Retrieves accidentals from pitch\n      // Removes natural accidentals since they are not accepted in Tonal Midi\n\n      var accidentals = pitchParts[0].substring(1).replace('n', '');\n\n      if (addRenderedAccidentals) {\n        var _note$getAccidentals;\n\n        (_note$getAccidentals = note.getAccidentals()) === null || _note$getAccidentals === void 0 ? void 0 : _note$getAccidentals.forEach(function (accidental) {\n          if (accidental.index === index) {\n            if (accidental.type === 'n') {\n              accidentals = '';\n            } else {\n              accidentals += accidental.type;\n            }\n          }\n        });\n      }\n\n      return pitchParts[0][0] + accidentals + pitchParts[1];\n    }\n    /**\n     * Converts VexFlow duration syntax to MidiWriterJS syntax\n     * @param note struct from VexFlow\n     */\n\n  }, {\n    key: \"convertDuration\",\n    value: function convertDuration(note) {\n      return 'd'.repeat(note.dots) + this.convertBaseDuration(note.duration) + (note.tuplet ? 't' + note.tuplet.num_notes : '');\n    }\n    /**\n     * Converts VexFlow base duration syntax to MidiWriterJS syntax\n     * @param duration Vexflow duration\n     * @returns MidiWriterJS duration\n     */\n\n  }, {\n    key: \"convertBaseDuration\",\n    value: function convertBaseDuration(duration) {\n      switch (duration) {\n        case 'w':\n          return '1';\n\n        case 'h':\n          return '2';\n\n        case 'q':\n          return '4';\n\n        default:\n          return duration;\n      }\n    }\n  }]);\n\n  return VexFlow;\n}();\n\n/**\n * Object representation of a header chunk section of a MIDI file.\n * @param {number} numberOfTracks - Number of tracks\n * @return {HeaderChunk}\n */\n\nvar HeaderChunk = /*#__PURE__*/_createClass(function HeaderChunk(numberOfTracks) {\n  _classCallCheck(this, HeaderChunk);\n\n  this.type = Constants.HEADER_CHUNK_TYPE;\n  var trackType = numberOfTracks > 1 ? Constants.HEADER_CHUNK_FORMAT1 : Constants.HEADER_CHUNK_FORMAT0;\n  this.data = trackType.concat(Utils.numberToBytes(numberOfTracks, 2), // two bytes long,\n  Constants.HEADER_CHUNK_DIVISION);\n  this.size = [0, 0, 0, this.data.length];\n});\n\n/**\n * Object that puts together tracks and provides methods for file output.\n * @param {array|Track} tracks - A single {Track} object or an array of {Track} objects.\n * @param {object} options - {middleC: 'C4'}\n * @return {Writer}\n */\n\nvar Writer = /*#__PURE__*/function () {\n  function Writer(tracks) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Writer);\n\n    // Ensure tracks is an array\n    this.tracks = Utils.toArray(tracks);\n    this.options = options;\n  }\n  /**\n   * Builds array of data from chunkschunks.\n   * @return {array}\n   */\n\n\n  _createClass(Writer, [{\n    key: \"buildData\",\n    value: function buildData() {\n      var _this = this;\n\n      var data = [];\n      data.push(new HeaderChunk(this.tracks.length)); // For each track add final end of track event and build data\n\n      this.tracks.forEach(function (track, i) {\n        data.push(track.buildData(_this.options));\n      });\n      return data;\n    }\n    /**\n     * Builds the file into a Uint8Array\n     * @return {Uint8Array}\n     */\n\n  }, {\n    key: \"buildFile\",\n    value: function buildFile() {\n      var build = []; // Data consists of chunks which consists of data\n\n      this.buildData().forEach(function (d) {\n        return build = build.concat(d.type, d.size, d.data);\n      });\n      return new Uint8Array(build);\n    }\n    /**\n     * Convert file buffer to a base64 string.  Different methods depending on if browser or node.\n     * @return {string}\n     */\n\n  }, {\n    key: \"base64\",\n    value: function base64() {\n      if (typeof btoa === 'function') return btoa(String.fromCharCode.apply(null, this.buildFile()));\n      return Buffer.from(this.buildFile()).toString('base64');\n    }\n    /**\n     * Get the data URI.\n     * @return {string}\n     */\n\n  }, {\n    key: \"dataUri\",\n    value: function dataUri() {\n      return 'data:audio/midi;base64,' + this.base64();\n    }\n    /**\n     * Set option on instantiated Writer.\n     * @param {string} key\n     * @param {any} value\n     * @return {Writer}\n     */\n\n  }, {\n    key: \"setOption\",\n    value: function setOption(key, value) {\n      this.options[key] = value;\n      return this;\n    }\n    /**\n     * Output to stdout\n     * @return {string}\n     */\n\n  }, {\n    key: \"stdout\",\n    value: function stdout() {\n      return process.stdout.write(Buffer.from(this.buildFile()));\n    }\n  }]);\n\n  return Writer;\n}();\n\nvar main = {\n  Constants: Constants,\n  NoteOnEvent: NoteOnEvent,\n  NoteOffEvent: NoteOffEvent,\n  NoteEvent: NoteEvent,\n  PitchBendEvent: PitchBendEvent,\n  ProgramChangeEvent: ProgramChangeEvent,\n  Track: Track,\n  Utils: Utils,\n  VexFlow: VexFlow,\n  Writer: Writer\n};\n\nmodule.exports = main;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict'\n\n// util\nfunction fillStr (s, num) { return Array(num + 1).join(s) }\nfunction isNum (x) { return typeof x === 'number' }\nfunction isStr (x) { return typeof x === 'string' }\nfunction isDef (x) { return typeof x !== 'undefined' }\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nexport function regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n * and some category (for example an scale: 'C# major'). It's false by default,\n * but when true, en extra tonicOf property is returned with the category ('major')\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n * since, for example, chroma of 'Cb' and 'B' are both 11\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nexport function parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || (!isTonic && m[4])) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  var pos = SEMITONES[p.step] + p.alt\n  p.chroma = pos < 0 ? 12 + pos : pos % 12\n  if (m[3]) { // has octave\n    p.oct = +m[3]\n    p.midi = pos + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\nvar LETTERS = 'CDEFGAB'\nfunction accStr (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\nfunction octStr (n) { return !isNum(n) ? '' : '' + n }\n\n/**\n * Create a string from a parsed object or `step, alteration, octave` parameters\n * @param {Object} obj - the parsed data object\n * @return {String} a note string or null if not valid parameters\n * @since 1.2\n * @example\n * parser.build(parser.parse('cb2')) // => 'Cb2'\n *\n * @example\n * // it accepts (step, alteration, octave) parameters:\n * parser.build(3) // => 'F'\n * parser.build(3, -1) // => 'Fb'\n * parser.build(3, -1, 4) // => 'Fb4'\n */\nexport function build (s, a, o) {\n  if (s === null || typeof s === 'undefined') return null\n  if (s.step) return build(s.step, s.alt, s.oct)\n  if (s < 0 || s > 6) return null\n  return LETTERS.charAt(s) + accStr(a) + octStr(o)\n}\n\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String|Integer} note - the note name or midi number\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n * @example\n * // midi numbers are bypassed (even as strings)\n * parser.midi(60) // => 60\n * parser.midi('60') // => 60\n */\nexport function midi (note) {\n  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n  var p = parse(note)\n  return p && isDef(p.midi) ? p.midi : null\n}\n\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name or note midi number\n * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n * @example\n * // can change tuning (440 by default)\n * parser.freq('A4', 444) // => 444\n * parser.freq('A3', 444) // => 222\n * @example\n * // it accepts midi numbers (as numbers and as strings)\n * parser.freq(69) // => 440\n * parser.freq('69', 442) // => 442\n */\nexport function freq (note, tuning) {\n  var m = midi(note)\n  return m === null ? null : midiToFreq(m, tuning)\n}\n\nexport function letter (src) { return (parse(src) || {}).letter }\nexport function acc (src) { return (parse(src) || {}).acc }\nexport function pc (src) { return (parse(src) || {}).pc }\nexport function step (src) { return (parse(src) || {}).step }\nexport function alt (src) { return (parse(src) || {}).alt }\nexport function chroma (src) { return (parse(src) || {}).chroma }\nexport function oct (src) { return (parse(src) || {}).oct }\n","/**\n * A midi note number is a number representation of a note pitch. It can be\n * integers so it's equal tempered tuned, or float to indicate it's not\n * tuned into equal temepered scale.\n *\n * This module contains functions to convert to and from midi notes.\n *\n * @example\n * var midi = require('tonal-midi')\n * midi.toMidi('A4') // => 69\n * midi.note(69) // => 'A4'\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n *\n * @module midi\n */\n\nimport { midi } from 'note-parser'\n\n/**\n * Convert the given note to a midi note number. If you pass a midi number it\n * will returned as is.\n *\n * @param {Array|String|Number} note - the note to get the midi number from\n * @return {Integer} the midi number or null if not valid pitch\n * @example\n * midi.toMidi('C4') // => 60\n * midi.toMidi(60) // => 60\n * midi.toMidi('60') // => 60\n */\nexport function toMidi (val) {\n  if (Array.isArray(val) && val.length === 2) return val[0] * 7 + val[1] * 12 + 12\n  return midi(val)\n}\n\nvar FLATS = 'C Db D Eb E F Gb G Ab A Bb B'.split(' ')\nvar SHARPS = 'C C# D D# E F F# G G# A A# B'.split(' ')\n\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {Integer} midi - the midi note number\n * @param {Boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {String} the note name\n * @example\n * var midi = require('tonal-midi')\n * midi.note(61) // => 'Db4'\n * midi.note(61, true) // => 'C#4'\n * // it rounds to nearest note\n * midi.note(61.7) // => 'D4'\n */\nexport function note (num, sharps) {\n  if (num === true || num === false) return function (m) { return note(m, num) }\n  num = Math.round(num)\n  var pcs = sharps === true ? SHARPS : FLATS\n  var pc = pcs[num % 12]\n  var o = Math.floor(num / 12) - 1\n  return pc + o\n}\n"],"sourceRoot":""}